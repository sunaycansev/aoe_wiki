@use "sass:color";
@use "../styles/variables" as *;
@use "../styles/mixins" as *;

.unitsPageContainer {
  display: flex;
  flex-direction: column;
  gap: $spacing-unit * 3;
  max-width: 1200px;
  margin: 0 auto;

  @media (max-width: 768px) {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }
}

.pageTitle {
  @include page-title-style;
}

.contentSection {
  min-height: 300px;
}

.loadingContainer,
.errorContainer,
.emptyContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: $spacing-unit * 4;
  text-align: center;
  border: 1px solid $border-color;
  border-radius: 4px;
  background-color: color.adjust($background-color, $lightness: 2%);
}

.loadingContainer {
  p {
    color: color.adjust($text-color, $lightness: -10%);
    font-size: 1.1rem;
  }
}

.errorContainer {
  border-color: color.adjust(red, $lightness: 30%);
  background-color: color.adjust(red, $lightness: 45%);

  p {
    color: color.adjust(red, $lightness: -20%);
  }
}

.emptyContainer {
  gap: $spacing-unit * 2;

  p {
    font-size: 1.1rem;
    margin: 0;
  }
}

.resetButton {
  background-color: $primary-color;
  color: $white;
  border: none;
  padding: $spacing-unit $spacing-unit * 2;
  border-radius: 4px;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s ease;

  &:hover {
    background-color: color.adjust($primary-color, $lightness: -10%);
  }

  &:focus-visible {
    outline: 3px solid color.adjust($primary-color, $lightness: 30%);
    outline-offset: 2px;
  }
}
